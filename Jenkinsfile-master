// @Library('test')_

library identifier: 'test@master',
    retriever: modernSCM([
      $class: 'GitSCMSource',
      remote: 'https://github.com/massimilianovallascas/test.git'
])

pipeline {
    agent any

    options {
        timestamps()
    }

    parameters {
        string(name: 'TERRAFORM_DEPLOYMENT_CONFIG_FILE', defaultValue: '.terraform_deployment_config.yml', description: '')
        string(name: 'VERSION', defaultValue: '', description: 'e.g. 1.3.8 (required for production)')
        string(name: 'HSBC_PASS', defaultValue: '', description: 'Your personal password')
        string(name: 'CR', defaultValue: '', description: 'Change request number (required for production)')
    }

    environment {
        GIT_PREFIX = "github.com/massimilianovallascas/terraform-"
    }
    stages {
        stage("Terraform download") {
            steps {
                script {
                    terraform.download('1.0.0')
                }
                
            }
        }

        // stage("Git credentials") {
        //     steps {
        //         script {
                    
        //             // withCredentials([usernamePassword(credentialsId: 'gitcreds', passwordVariable: 'GIT_PASS', usernameVariable: 'GIT_USER')]) {
        //             //     sh "git config --global credential.helper '!f() { sleep 1; echo \"username=${env.GIT_USER}\\npassword=${env.GIT_PASS}\"; }; f'"
        //             //     // sh 'terraform init -input=false -upgrade'
        //             //     // sh 'git config --local --remove-section credential'
        //             // }
        //         }
        //     }
        // }
        stage("Terraform run") {
            steps {
                withCredentials([string(credentialsId: 'git_token', variable: 'GIT_TOKEN')]) {
                    sh '''
                        git_credentials.sh
                    '''
                    
                    // sh '''
                    //     git config --global --remove-section url."https://${GIT_TOKEN}@github.com"/massimilianovallascas
                    // '''
                }
                script {
                    milestone()
                    terraform.init()
                    milestone()
                    terraform.plan()
                    milestone()
                    terraform.apply()
                    milestone()
                    terraform.clean()
                    milestone() 
                }
            }
        }

        // stage("Env") {
        
        // }
    }
    post {
        always {
            cleanWs deleteDirs: true, disableDeferredWipeout: true
        }
    }
}
